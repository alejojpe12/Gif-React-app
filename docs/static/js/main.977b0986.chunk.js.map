{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","propTypes","func","isRequired","ReactDom","render","document","getElementById"],"mappings":"wKAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAE1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAnBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+CCLjBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACxB,kCAAKA,EAAL,WCHKS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAa,IAAD,EAGZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAwBtC,OAhBAC,qBAAW,WACP1B,EAAOC,GACN0B,MAAK,SAAAC,GAGEX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAIGuB,EDpB0BK,CAAc5B,GAAlCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,oCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEYL,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAIIA,GAFEA,EAAIC,aESvBkB,EAzBM,WAAO,IAAD,EAEa3C,mBAAU,CAAC,cAFxB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAKvB,OACA,qCACI,2CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADJA,YAY/BhB,EAAY+C,UAAY,CACpB9C,cAAe8C,IAAUC,KAAKC,Y,MC5BlCC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.977b0986.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();  \r\n\r\n        if( inputValue.trim().length> 2) {\r\n\r\n            setCategories(cats=>[inputValue, ...cats ])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value= {inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\n export const getGif = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OQi7I7AFX8cqf9z7uMIilL6hT07T5cP4`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n        <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__fadeIn\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( (img) => (\r\n                            <GifGridItem \r\n\r\n                            key={ img.id }\r\n\r\n                            {...img}\r\n\r\n                            />            \r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGif } from '../helpers/getGif'\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGif(category)\r\n        .then(imgs => {\r\n\r\n            \r\n                console.log(imgs)\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n           \r\n        })                                                                                                                                                           \r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport propTypes from 'prop-types'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['One Punch'] )\r\n\r\n\r\n    return(\r\n    <>\r\n        <h2>GifExpert</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category =>( \r\n                    <GifGrid\r\n                        key= { category }\r\n                        category={ category }\r\n                    />\r\n                ))\r\n                \r\n            }\r\n        </ol>\r\n    </>\r\n    )\r\n}\r\nexport default GifExpertApp\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\n\r\nReactDom.render( \r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}